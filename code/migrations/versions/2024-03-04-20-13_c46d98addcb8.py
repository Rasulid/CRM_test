"""add user model

Revision ID: c46d98addcb8
Revises: 
Create Date: 2024-03-04 20:13:43.643232

"""
from typing import Sequence, Union

import sqlalchemy_utils
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c46d98addcb8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('curator_vacation',
    sa.Column('desc', sa.String(), nullable=True),
    sa.Column('start', sa.Date(), nullable=False),
    sa.Column('stop', sa.Date(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('district',
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('sort > 0', name='check_sort_positive'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_district_code'), 'district', ['code'], unique=False)
    op.create_table('language',
    sa.Column('title', sa.JSON(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_language_code'), 'language', ['code'], unique=True)
    op.create_table('organization_translation',
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organization_translation_title'), 'organization_translation', ['title'], unique=False)
    op.create_table('permission',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('desc', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permission_desc'), 'permission', ['desc'], unique=False)
    op.create_index(op.f('ix_permission_title'), 'permission', ['title'], unique=True)
    op.create_table('profession',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('sort > 0', name='check_sort_positive'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('region',
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('sort > 0', name='check_sort_positive'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_region_code'), 'region', ['code'], unique=False)
    op.create_table('region_translation',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_region_translation_title'), 'region_translation', ['title'], unique=False)
    op.create_table('role',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('desc', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_desc'), 'role', ['desc'], unique=False)
    op.create_index(op.f('ix_role_title'), 'role', ['title'], unique=True)
    op.create_table('tag',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tag_slug'), 'tag', ['slug'], unique=True)
    op.create_index(op.f('ix_tag_title'), 'tag', ['title'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='genderenum'), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('is_staff', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('salt', sa.LargeBinary(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('google_user_id', sa.String(), nullable=True),
    sa.Column('github_login', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('num_nulls(email, phone) < 2', name='Email or phone required check'),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('salt')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=False)
    op.create_index(op.f('ix_user_phone'), 'user', ['phone'], unique=False)
    op.create_table('contact',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contact_name'), 'contact', ['name'], unique=False)
    op.create_index(op.f('ix_contact_phone'), 'contact', ['phone'], unique=False)
    op.create_index(op.f('ix_contact_text'), 'contact', ['text'], unique=False)
    op.create_table('curator_info',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('contract_number', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('curator_weekends',
    sa.Column('curator_id', sa.UUID(), nullable=False),
    sa.Column('day', sa.Date(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['curator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('district_translation',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_district_translation_title'), 'district_translation', ['title'], unique=False)
    op.create_table('link_mentor_course',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('link_role_permission',
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('link_user_permission',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('link_user_role',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mentor_info',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('contract_number', sa.String(), nullable=True),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('main_work', sa.String(), nullable=False),
    sa.Column('is_main', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('organization',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('director_id', sa.UUID(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('identification_number', sa.Integer(), nullable=False),
    sa.Column('bank_account', sa.String(length=16), nullable=True),
    sa.Column('bank_mfo', sa.String(length=5), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('brand_name', sa.String(), nullable=True),
    sa.Column('domain_name', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['director_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identification_number')
    )
    op.create_table('profession_translation',
    sa.Column('profession_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('desc', sa.String(), nullable=True),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ),
    sa.ForeignKeyConstraint(['profession_id'], ['profession.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('profession_id', 'language_id')
    )
    op.create_index(op.f('ix_profession_translation_desc'), 'profession_translation', ['desc'], unique=False)
    op.create_index(op.f('ix_profession_translation_title'), 'profession_translation', ['title'], unique=False)
    op.create_table('question',
    sa.Column('type', sa.Enum('SINGLE', 'MULTIPLE', 'OWN_ANSWER', name='questiontypeenum'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_info',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('topic',
    sa.Column('profession_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('sort > 0', name='check_sort_positive'),
    sa.ForeignKeyConstraint(['profession_id'], ['profession.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('training',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('example', sa.Text(), nullable=False),
    sa.Column('case_count', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_training_title'), 'training', ['title'], unique=True)
    op.create_table('user_translation',
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('short_name', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_translation_first_name'), 'user_translation', ['first_name'], unique=False)
    op.create_index(op.f('ix_user_translation_last_name'), 'user_translation', ['last_name'], unique=False)
    op.create_index(op.f('ix_user_translation_short_name'), 'user_translation', ['short_name'], unique=False)
    op.create_index(op.f('ix_user_translation_street'), 'user_translation', ['street'], unique=False)
    op.create_table('answer',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course',
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=12, scale=2, asdecimal=False), nullable=False),
    sa.Column('is_free', sa.Boolean(), nullable=True),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('PUBLIC', 'PRIVATE', 'PREMIERE', name='coursestatusenum'), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_for_child', sa.Boolean(), nullable=True),
    sa.Column('level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'EXPERT', name='difficultylevelenum'), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('telegram_url', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('price >= 0', name='check_price_valid'),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('curator_info_translation',
    sa.Column('curator_info_id', sa.Integer(), nullable=False),
    sa.Column('education_and_career', sa.String(), nullable=True),
    sa.Column('about_choosing_profession', sa.String(), nullable=True),
    sa.Column('projects_and_portfolios', sa.String(), nullable=True),
    sa.Column('advice_to_students', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['curator_info_id'], ['curator_info.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mentor_info_translation',
    sa.Column('mentor_info_id', sa.Integer(), nullable=False),
    sa.Column('education_and_career', sa.String(), nullable=True),
    sa.Column('about_choosing_profession', sa.String(), nullable=True),
    sa.Column('projects_and_portfolios', sa.String(), nullable=True),
    sa.Column('advice_to_students', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['mentor_info_id'], ['mentor_info.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question_translation',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('question_id', 'language_id')
    )
    op.create_index(op.f('ix_question_translation_content'), 'question_translation', ['content'], unique=False)
    op.create_index(op.f('ix_question_translation_title'), 'question_translation', ['title'], unique=False)
    op.create_table('student_info_translation',
    sa.Column('student_info_id', sa.Integer(), nullable=False),
    sa.Column('personal_note', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['student_info_id'], ['student_info.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topic_translation',
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('desc', sa.String(), nullable=True),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('topic_id', 'language_id')
    )
    op.create_index(op.f('ix_topic_translation_desc'), 'topic_translation', ['desc'], unique=False)
    op.create_index(op.f('ix_topic_translation_title'), 'topic_translation', ['title'], unique=False)
    op.create_table('user_own_answer',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.String(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('about_course_format_block',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('answer_translation',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('answer_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['answer_id'], ['answer.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('answer_id', 'language_id')
    )
    op.create_index(op.f('ix_answer_translation_title'), 'answer_translation', ['title'], unique=False)
    op.create_table('course_comment',
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('replied_by_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['replied_by_id'], ['course_comment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_group',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('curator_id', sa.UUID(), nullable=False),
    sa.Column('is_main', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['curator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'course_id', 'curator_id')
    )
    op.create_table('course_module',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('is_free', sa.Boolean(), nullable=True),
    sa.Column('price', sa.DECIMAL(precision=12, scale=2, asdecimal=False), nullable=True),
    sa.Column('level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'EXPERT', name='difficultylevelenum'), nullable=True),
    sa.Column('is_final', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('price >= 0', name='check_price_valid'),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('course_plan_block',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_rating',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('rating', sa.SmallInteger(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('rating > 0 AND rating <= 5', name='check_rating_valid'),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_id', 'user_id')
    )
    op.create_table('course_review',
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_students_work_block',
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_translation',
    sa.Column('sub_title', sa.String(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('desc', sa.String(), nullable=True),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_id', 'language_id')
    )
    op.create_index(op.f('ix_course_translation_desc'), 'course_translation', ['desc'], unique=False)
    op.create_index(op.f('ix_course_translation_title'), 'course_translation', ['title'], unique=False)
    op.create_table('final_score',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('certificate_id', sa.String(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('reviewed_by_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('score > 0 AND score <= 10', name='check_score_valid'),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reviewed_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('certificate_id'),
    sa.UniqueConstraint('course_id', 'student_id')
    )
    op.create_table('for_whom_course_block',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('link_category_course',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('link_course_tag',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('link_organization_allowed_course',
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'course_id')
    )
    op.create_table('link_user_allowed_course',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'course_id')
    )
    op.create_table('what_learn_course_block',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('about_course_format_block_translation',
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['about_course_format_block.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('parent_id', 'language_id')
    )
    op.create_index(op.f('ix_about_course_format_block_translation_key'), 'about_course_format_block_translation', ['key'], unique=False)
    op.create_index(op.f('ix_about_course_format_block_translation_value'), 'about_course_format_block_translation', ['value'], unique=False)
    op.create_table('course_lesson',
    sa.Column('course_module_id', sa.Integer(), nullable=False),
    sa.Column('is_free', sa.Boolean(), nullable=True),
    sa.Column('is_homework', sa.Boolean(), nullable=True),
    sa.Column('price', sa.DECIMAL(precision=12, scale=2, asdecimal=False), nullable=True),
    sa.Column('lesson_id', sa.Integer(), nullable=True),
    sa.Column('is_final', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('price >= 0', name='check_price_valid'),
    sa.ForeignKeyConstraint(['course_module_id'], ['course_module.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('course_module_translation',
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('course_module_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('desc', sa.String(), nullable=True),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_module_id'], ['course_module.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_module_id', 'language_id')
    )
    op.create_index(op.f('ix_course_module_translation_desc'), 'course_module_translation', ['desc'], unique=False)
    op.create_index(op.f('ix_course_module_translation_title'), 'course_module_translation', ['title'], unique=False)
    op.create_table('course_plan_block_translation',
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['course_plan_block.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('parent_id', 'language_id')
    )
    op.create_index(op.f('ix_course_plan_block_translation_key'), 'course_plan_block_translation', ['key'], unique=False)
    op.create_index(op.f('ix_course_plan_block_translation_value'), 'course_plan_block_translation', ['value'], unique=False)
    op.create_table('course_review_translation',
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('course_review_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_review_id'], ['course_review.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_review_id', 'language_id')
    )
    op.create_table('for_whom_course_block_translation',
    sa.Column('whom', sa.String(), nullable=False),
    sa.Column('desc', sa.String(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['for_whom_course_block.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('parent_id', 'language_id')
    )
    op.create_index(op.f('ix_for_whom_course_block_translation_desc'), 'for_whom_course_block_translation', ['desc'], unique=False)
    op.create_index(op.f('ix_for_whom_course_block_translation_whom'), 'for_whom_course_block_translation', ['whom'], unique=False)
    op.create_table('link_course_group_student',
    sa.Column('course_group_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_group_id'], ['course_group.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('link_user_allowed_course_module',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('course_module_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_module_id'], ['course_module.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'course_module_id')
    )
    op.create_table('what_learn_course_block_translation',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('desc', sa.String(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['what_learn_course_block.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('parent_id', 'language_id')
    )
    op.create_index(op.f('ix_what_learn_course_block_translation_desc'), 'what_learn_course_block_translation', ['desc'], unique=False)
    op.create_index(op.f('ix_what_learn_course_block_translation_title'), 'what_learn_course_block_translation', ['title'], unique=False)
    op.create_table('course_lesson_translation',
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('course_lesson_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('desc', sa.String(), nullable=True),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_lesson_id'], ['course_lesson.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('course_lesson_id', 'language_id')
    )
    op.create_index(op.f('ix_course_lesson_translation_desc'), 'course_lesson_translation', ['desc'], unique=False)
    op.create_index(op.f('ix_course_lesson_translation_title'), 'course_lesson_translation', ['title'], unique=False)
    op.create_table('course_lesson_video',
    sa.Column('course_lesson_id', sa.Integer(), nullable=False),
    sa.Column('ks_uuid', sa.String(), nullable=False),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_lesson_id'], ['course_lesson.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('file_block',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('course_lesson_id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_lesson_id'], ['course_lesson.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('link_user_allowed_course_lesson',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('course_lesson_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_lesson_id'], ['course_lesson.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'course_lesson_id')
    )
    op.create_table('quiz_block',
    sa.Column('quiz_type', sa.Enum('LAST_PUBLIC', 'EVERY_PUBLIC', 'LAST_PRIVATE', 'EVERY_PRIVATE', name='quizblocktypeenum'), nullable=False),
    sa.Column('allowed_attempts', sa.Integer(), nullable=True),
    sa.Column('fixed_seconds', sa.Integer(), nullable=True),
    sa.Column('allowed_errors_count', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('course_lesson_id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_lesson_id'], ['course_lesson.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('text_block',
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('course_lesson_id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_lesson_id'], ['course_lesson.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('training_block',
    sa.Column('training_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('course_lesson_id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_lesson_id'], ['course_lesson.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['training_id'], ['training.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_learned_course_lesson',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('course_lesson_id', sa.Integer(), nullable=False),
    sa.Column('learned_percent', sa.Float(), nullable=True),
    sa.Column('is_learned', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_lesson_id'], ['course_lesson.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'course_lesson_id')
    )
    op.create_table('video_block',
    sa.Column('ks_uuid', sa.String(), nullable=False),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('course_lesson_id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_lesson_id'], ['course_lesson.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('link_quiz_block_question',
    sa.Column('quiz_block_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['quiz_block_id'], ['quiz_block.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quiz_block_question_sort',
    sa.Column('quiz_block_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['quiz_block_id'], ['quiz_block.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('question_id', 'quiz_block_id')
    )
    op.create_table('text_block_translation',
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('text_block_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ),
    sa.ForeignKeyConstraint(['text_block_id'], ['text_block.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('text_block_id', 'language_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('text_block_translation')
    op.drop_table('quiz_block_question_sort')
    op.drop_table('link_quiz_block_question')
    op.drop_table('video_block')
    op.drop_table('user_learned_course_lesson')
    op.drop_table('training_block')
    op.drop_table('text_block')
    op.drop_table('quiz_block')
    op.drop_table('link_user_allowed_course_lesson')
    op.drop_table('file_block')
    op.drop_table('course_lesson_video')
    op.drop_index(op.f('ix_course_lesson_translation_title'), table_name='course_lesson_translation')
    op.drop_index(op.f('ix_course_lesson_translation_desc'), table_name='course_lesson_translation')
    op.drop_table('course_lesson_translation')
    op.drop_index(op.f('ix_what_learn_course_block_translation_title'), table_name='what_learn_course_block_translation')
    op.drop_index(op.f('ix_what_learn_course_block_translation_desc'), table_name='what_learn_course_block_translation')
    op.drop_table('what_learn_course_block_translation')
    op.drop_table('link_user_allowed_course_module')
    op.drop_table('link_course_group_student')
    op.drop_index(op.f('ix_for_whom_course_block_translation_whom'), table_name='for_whom_course_block_translation')
    op.drop_index(op.f('ix_for_whom_course_block_translation_desc'), table_name='for_whom_course_block_translation')
    op.drop_table('for_whom_course_block_translation')
    op.drop_table('course_review_translation')
    op.drop_index(op.f('ix_course_plan_block_translation_value'), table_name='course_plan_block_translation')
    op.drop_index(op.f('ix_course_plan_block_translation_key'), table_name='course_plan_block_translation')
    op.drop_table('course_plan_block_translation')
    op.drop_index(op.f('ix_course_module_translation_title'), table_name='course_module_translation')
    op.drop_index(op.f('ix_course_module_translation_desc'), table_name='course_module_translation')
    op.drop_table('course_module_translation')
    op.drop_table('course_lesson')
    op.drop_index(op.f('ix_about_course_format_block_translation_value'), table_name='about_course_format_block_translation')
    op.drop_index(op.f('ix_about_course_format_block_translation_key'), table_name='about_course_format_block_translation')
    op.drop_table('about_course_format_block_translation')
    op.drop_table('what_learn_course_block')
    op.drop_table('link_user_allowed_course')
    op.drop_table('link_organization_allowed_course')
    op.drop_table('link_course_tag')
    op.drop_table('link_category_course')
    op.drop_table('for_whom_course_block')
    op.drop_table('final_score')
    op.drop_index(op.f('ix_course_translation_title'), table_name='course_translation')
    op.drop_index(op.f('ix_course_translation_desc'), table_name='course_translation')
    op.drop_table('course_translation')
    op.drop_table('course_students_work_block')
    op.drop_table('course_review')
    op.drop_table('course_rating')
    op.drop_table('course_plan_block')
    op.drop_table('course_module')
    op.drop_table('course_group')
    op.drop_table('course_comment')
    op.drop_index(op.f('ix_answer_translation_title'), table_name='answer_translation')
    op.drop_table('answer_translation')
    op.drop_table('about_course_format_block')
    op.drop_table('user_own_answer')
    op.drop_index(op.f('ix_topic_translation_title'), table_name='topic_translation')
    op.drop_index(op.f('ix_topic_translation_desc'), table_name='topic_translation')
    op.drop_table('topic_translation')
    op.drop_table('student_info_translation')
    op.drop_index(op.f('ix_question_translation_title'), table_name='question_translation')
    op.drop_index(op.f('ix_question_translation_content'), table_name='question_translation')
    op.drop_table('question_translation')
    op.drop_table('mentor_info_translation')
    op.drop_table('curator_info_translation')
    op.drop_table('course')
    op.drop_table('answer')
    op.drop_index(op.f('ix_user_translation_street'), table_name='user_translation')
    op.drop_index(op.f('ix_user_translation_short_name'), table_name='user_translation')
    op.drop_index(op.f('ix_user_translation_last_name'), table_name='user_translation')
    op.drop_index(op.f('ix_user_translation_first_name'), table_name='user_translation')
    op.drop_table('user_translation')
    op.drop_index(op.f('ix_training_title'), table_name='training')
    op.drop_table('training')
    op.drop_table('topic')
    op.drop_table('student_info')
    op.drop_table('question')
    op.drop_index(op.f('ix_profession_translation_title'), table_name='profession_translation')
    op.drop_index(op.f('ix_profession_translation_desc'), table_name='profession_translation')
    op.drop_table('profession_translation')
    op.drop_table('organization')
    op.drop_table('mentor_info')
    op.drop_table('link_user_role')
    op.drop_table('link_user_permission')
    op.drop_table('link_role_permission')
    op.drop_table('link_mentor_course')
    op.drop_index(op.f('ix_district_translation_title'), table_name='district_translation')
    op.drop_table('district_translation')
    op.drop_table('curator_weekends')
    op.drop_table('curator_info')
    op.drop_index(op.f('ix_contact_text'), table_name='contact')
    op.drop_index(op.f('ix_contact_phone'), table_name='contact')
    op.drop_index(op.f('ix_contact_name'), table_name='contact')
    op.drop_table('contact')
    op.drop_index(op.f('ix_user_phone'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_tag_title'), table_name='tag')
    op.drop_index(op.f('ix_tag_slug'), table_name='tag')
    op.drop_table('tag')
    op.drop_index(op.f('ix_role_title'), table_name='role')
    op.drop_index(op.f('ix_role_desc'), table_name='role')
    op.drop_table('role')
    op.drop_index(op.f('ix_region_translation_title'), table_name='region_translation')
    op.drop_table('region_translation')
    op.drop_index(op.f('ix_region_code'), table_name='region')
    op.drop_table('region')
    op.drop_table('profession')
    op.drop_index(op.f('ix_permission_title'), table_name='permission')
    op.drop_index(op.f('ix_permission_desc'), table_name='permission')
    op.drop_table('permission')
    op.drop_index(op.f('ix_organization_translation_title'), table_name='organization_translation')
    op.drop_table('organization_translation')
    op.drop_index(op.f('ix_language_code'), table_name='language')
    op.drop_table('language')
    op.drop_index(op.f('ix_district_code'), table_name='district')
    op.drop_table('district')
    op.drop_table('curator_vacation')
    # ### end Alembic commands ###
